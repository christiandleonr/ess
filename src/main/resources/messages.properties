create.user.error.title=Create user failed.
create.user.error.message=Something went wrong while creating the user {0}.
create.user.illegalArgument.title=Invalid data.
create.user.illegalArgument.emptyUser.message=User cannot be empty.
create.user.illegalArgument.nameTooLong.message=Name too long, the number of characters should not be greater than {0}.
create.user.illegalArgument.emptyName.message=Name cannot be empty.
create.user.illegalArgument.lastnameTooLong.message=Lastname too long, the number of characters should not be greater than {0}.
create.user.illegalArgument.emptyLastname.message=Lastname cannot be empty.
create.user.illegalArgument.usernameTooLong.message=Username too long, the number of characters should not be greater than {0}.
create.user.illegalArgument.emptyUsername.message=Username cannot be empty.
create.user.illegalArgument.invalidUsername.message=Username must be unique. The username {0} is already being used.
create.user.illegalArgument.emailTooLong.message=Email too long, the number of character should be shorter than {0}.
create.user.illegalArgument.emptyEmail.message=Email cannot be empty.
create.user.illegalArgument.invalidEmailFormat.message=Invalid email format for email {0}.
create.user.illegalArgument.emptyPhone.message=Phone number cannot be empty.
create.user.illegalArgument.phoneWrongSize.message=Phone number wrong size, number size should be 10.
create.user.illegalArgument.phoneInvalidChar.message=Phone number must only contain numbers.
create.user.by.username.error.message=Something went wrong while reading the user with username {0}.
create.user.by.email.error.message=Something went wrong while reading the user with email {0}.
create.user.by.phone.error.message=Something went wrong while reading the user with phone {0}.
create.user.illegalArgument.invalidEmail.message=User with email {0} already exist.
create.user.illegalArgument.invalidPhone.message=User with phone {0} already exist.

get.user.error.title=Get user failed.
get.user.error.message=Something went wrong while reading the user with id {0}.
get.user.notFound.title=User not found.
get.user.notFound.message=User with id {0} not found.

delete.user.error.title=Delete user failed.
delete.user.error.message=Something went wrong while deleting the user with id {0}.

create.friendship.error.title=Create friendship failed.
create.friendship.error.message=Something went wrong while creating the friendship {0}.
create.friendship.illegalArgument.title=Invalid data.
create.friendship.illegalArgument.nullFriend.message=The field 'friend' in friendship cannot be null.
create.friendship.illegalArgument.nullAddedBy.message=The field 'addedBy' in friendship cannot be null.
create.friendship.illegalArgument.friendEmptyId.message=The id on 'friend' cannot be empty.
create.friendship.illegalArgument.addedByEmptyId.message=The id on 'addedBy' cannot be empty.

list.friends.error.title=List friends failed.
list.friends.error.message=Something went wrong while reading the user's friends for user with id {0}.

load.friendship.error.title=Load friendship failed.
load.friendship.error.message=Something went wrong while loading the friendship details between user {0} and {1}.
load.friendship.illegalArgument.title=Invalid data.
load.friendship.illegalArgument.friendship.exist=Friendship between user {0} and {1} already exist.

create.group.error.title=Create group failed.
create.group.error.message=Something went wrong while creating the group {0}.
create.group.illegalArgument.title=Invalid data.
create.group.illegalArgument.emptyGroup.message=Group cannot be empty.
create.group.illegalArgument.nameTooLong.message=Group name too long, the number of characters should not be greater than {0}.
create.group.illegalArgument.emptyName.message=Group name cannot be empty.
create.group.illegalArgument.descriptionTooLong.message=Group description too long, the number of characters should not be greater than {0}.

delete.group.member.error.title=Delete group member failed.
delete.group.member.error.message=Something went wrong while deleting the user from the groups.

get.group.error.title=Get group failed.
get.group.error.message=Something went wrong while reading the group with id {0}.
get.group.notFound.title=Group not found.
get.group.notFound.message=Group with id {0} not found.

create.transaction.error.title=Create transaction failed.
create.transaction.error.message=Something went wrong while creating the transaction {0}.
create.transaction.illegalArgument.title=Invalid data.
create.transaction.illegalArgument.nullOrEmpty.transaction.message=The transaction must not be null nor be empty.
create.transaction.illegalArgument.nullOrEmpty.name.message=The transaction name must not be null nor be empty.
create.transaction.illegalArgument.name.tooLong.message=The transaction name must not exceed {0} characters.
create.transaction.illegalArgument.nullOrEmpty.currency.message=The transaction currency type must not be null nor be empty.
create.transaction.illegalArgument.currency.tooLong.message=The transaction currency type must not exceed {0} characters for its code.
create.transaction.illegalArgument.nullOrEmpty.creditor.id.message=The creditor id must not be empty.
create.transaction.illegalArgument.nullOrEmpty.debtor.id.message=The debtor id must not be empty.
create.transaction.illegalArgument.nullOrEmpty.createdBy.id.message=The debtor id must not be empty.

insert.new.debt.error.title=Insert debt failed.
insert.new.debt.error.message=Something went wrong while creating the new revision of the debt {0}.
insert.new.debt.illegalArgument.nullOrEmpty.debt=The debt must not be null.
insert.new.debt.illegalArgument.nullOrEmpty.totalAmount=The debt total amount must not be null.
insert.new.debt.illegalArgument.nullOrEmpty.debt.amount=The debt amount must not be null.
insert.new.debt.illegalArgument.zero.totalAmount=The debt total amount must be greater than {0}
insert.new.debt.illegalArgument.zero.debt=The debt amount must be greater than {0}
insert.new.debt.illegalArgument.debt.greaterThan.totalAmount=The debt amount must not be greater than the total amount of the debt.
insert.new.debt.illegalArgument.debt.created.by.empty=The created by id must not be empty.
read.last.revision.error.message=Something went wrong while reading the last revision of the debt {0}.
