-- Database: ess

-- DROP SCHEMA IF EXISTS ess_schema ;

CREATE SCHEMA IF NOT EXISTS ess_schema
    AUTHORIZATION christiandleon;

-- DROP DATABASE IF EXISTS ess;

CREATE DATABASE ess
    WITH
    OWNER = christiandleon
    ENCODING = 'UTF8'
    LC_COLLATE = 'C'
    LC_CTYPE = 'C'
    TABLESPACE = pg_default
    CONNECTION LIMIT = s-1
    IS_TEMPLATE = False;

CREATE TABLE USERS (
    USERGUID VARCHAR(150) UNIQUE NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    LASTNAME VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(50) UNIQUE NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
);

CREATE TABLE FRIENDSHIPS (
    FRIENDSHIPGUID VARCHAR(150) UNIQUE NOT NULL,
    USER1 VARCHAR(150) NOT NULL,
    USER2 VARCHAR(150) NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(150) NOT NULL,
    FOREIGN KEY (USER1) REFERENCES USERS(USERGUID),
    FOREIGN KEY (USER2) REFERENCES USERS(USERGUID)
);

CREATE TABLE TRANSACTIONS (
    TRANSACTIONGUID VARCHAR(150) UNIQUE NOT NULL,
    CREDITOR VARCHAR(150) NOT NULL,
    DEBTOR VARCHAR(150) NOT NULL,
    TOTALAMOUNT MONEY NOT NULL,
    OWEDAMOUNT MONEY NOT NULL,
    PERCENTAGE NUMERIC NOT NULL,
    DEBTSETTLED VARCHAR(50) NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(150) NOT NULL,
    FOREIGN KEY (CREDITOR) REFERENCES USERS(USERGUID),
    FOREIGN KEY (DEBTOR) REFERENCES USERS(USERGUID)
);